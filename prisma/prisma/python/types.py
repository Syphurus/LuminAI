# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template types.py.jinja --
from typing import TypeVar

import httpx
from . import _types
from .utils import _NoneType



# TODO: filters with aggregates should have their own recursive fields
# TODO: cleanup whitespace control
# TODO: add an argument to signify that the last iteration should be skipped


SortMode = _types.SortMode
SortOrder = _types.SortOrder

MetricsFormat = _types.MetricsFormat

DatasourceOverride = _types.DatasourceOverride
HttpConfig = _types.HttpConfig


# types that can be serialized to json by our query builder
Serializable = Union[
    None,
    bool,
    float,
    int,
    str,
    datetime.datetime,
    List[Any],
    Dict[None, Any],
    Dict[bool, Any],
    Dict[float, Any],
    Dict[int, Any],
    Dict[str, Any],
]


    

StringFilter = TypedDict(
    'StringFilter',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive1'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive1 = TypedDict(
    'StringFilterRecursive1',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive2'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive2 = TypedDict(
    'StringFilterRecursive2',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive3'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive3 = TypedDict(
    'StringFilterRecursive3',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive4'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive4 = TypedDict(
    'StringFilterRecursive4',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
                'mode': SortMode,
        'search': str,
    },
    total=False,
)


class StringWithAggregatesFilter(StringFilter, total=False):
    _max: 'StringFilter'
    _min: 'StringFilter'
    _sum: 'StringFilter'
    _avg: 'StringFilter'
    _count: 'IntFilter'


    

DateTimeFilter = TypedDict(
    'DateTimeFilter',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive1'],
    },
    total=False,
)


DateTimeFilterRecursive1 = TypedDict(
    'DateTimeFilterRecursive1',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive2'],
    },
    total=False,
)


DateTimeFilterRecursive2 = TypedDict(
    'DateTimeFilterRecursive2',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive3'],
    },
    total=False,
)


DateTimeFilterRecursive3 = TypedDict(
    'DateTimeFilterRecursive3',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive4'],
    },
    total=False,
)


DateTimeFilterRecursive4 = TypedDict(
    'DateTimeFilterRecursive4',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
            },
    total=False,
)


class DateTimeWithAggregatesFilter(DateTimeFilter, total=False):
    _max: 'DateTimeFilter'
    _min: 'DateTimeFilter'
    _sum: 'DateTimeFilter'
    _avg: 'DateTimeFilter'
    _count: 'IntFilter'


    

BooleanFilter = TypedDict(
    'BooleanFilter',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive1'],
    },
    total=False,
)


BooleanFilterRecursive1 = TypedDict(
    'BooleanFilterRecursive1',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive2'],
    },
    total=False,
)


BooleanFilterRecursive2 = TypedDict(
    'BooleanFilterRecursive2',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive3'],
    },
    total=False,
)


BooleanFilterRecursive3 = TypedDict(
    'BooleanFilterRecursive3',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive4'],
    },
    total=False,
)


BooleanFilterRecursive4 = TypedDict(
    'BooleanFilterRecursive4',
    {
        'equals': bool,
            },
    total=False,
)


class BooleanWithAggregatesFilter(BooleanFilter, total=False):
    _max: 'BooleanFilter'
    _min: 'BooleanFilter'
    _sum: 'BooleanFilter'
    _avg: 'BooleanFilter'
    _count: 'IntFilter'


    

IntFilter = TypedDict(
    'IntFilter',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive1'],
    },
    total=False,
)


IntFilterRecursive1 = TypedDict(
    'IntFilterRecursive1',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive2'],
    },
    total=False,
)


IntFilterRecursive2 = TypedDict(
    'IntFilterRecursive2',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive3'],
    },
    total=False,
)


IntFilterRecursive3 = TypedDict(
    'IntFilterRecursive3',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive4'],
    },
    total=False,
)


IntFilterRecursive4 = TypedDict(
    'IntFilterRecursive4',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
            },
    total=False,
)


class IntWithAggregatesFilter(IntFilter, total=False):
    _max: 'IntFilter'
    _min: 'IntFilter'
    _sum: 'IntFilter'
    _avg: 'IntFilter'
    _count: 'IntFilter'


BigIntFilter = IntFilter
BigIntWithAggregatesFilter = IntWithAggregatesFilter
    

FloatFilter = TypedDict(
    'FloatFilter',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive1'],
    },
    total=False,
)


FloatFilterRecursive1 = TypedDict(
    'FloatFilterRecursive1',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive2'],
    },
    total=False,
)


FloatFilterRecursive2 = TypedDict(
    'FloatFilterRecursive2',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive3'],
    },
    total=False,
)


FloatFilterRecursive3 = TypedDict(
    'FloatFilterRecursive3',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive4'],
    },
    total=False,
)


FloatFilterRecursive4 = TypedDict(
    'FloatFilterRecursive4',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
            },
    total=False,
)


class FloatWithAggregatesFilter(FloatFilter, total=False):
    _max: 'FloatFilter'
    _min: 'FloatFilter'
    _sum: 'FloatFilter'
    _avg: 'FloatFilter'
    _count: 'IntFilter'


    

BytesFilter = TypedDict(
    'BytesFilter',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive1'],
    },
    total=False,
)


BytesFilterRecursive1 = TypedDict(
    'BytesFilterRecursive1',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive2'],
    },
    total=False,
)


BytesFilterRecursive2 = TypedDict(
    'BytesFilterRecursive2',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive3'],
    },
    total=False,
)


BytesFilterRecursive3 = TypedDict(
    'BytesFilterRecursive3',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive4'],
    },
    total=False,
)


BytesFilterRecursive4 = TypedDict(
    'BytesFilterRecursive4',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
            },
    total=False,
)


class BytesWithAggregatesFilter(BytesFilter, total=False):
    _max: 'BytesFilter'
    _min: 'BytesFilter'
    _sum: 'BytesFilter'
    _avg: 'BytesFilter'
    _count: 'IntFilter'


# TODO: preview feature for improving JSON filtering
JsonFilter = TypedDict(
    'JsonFilter',
    {
        'equals': 'fields.Json',
        'not': 'fields.Json',
    },
    total=False,
)


class JsonWithAggregatesFilter(JsonFilter, total=False):
    _max: 'JsonFilter'
    _min: 'JsonFilter'
    _sum: 'JsonFilter'
    _avg: 'JsonFilter'
    _count: 'IntFilter'


    

DecimalFilter = TypedDict(
    'DecimalFilter',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive1'],
    },
    total=False,
)


DecimalFilterRecursive1 = TypedDict(
    'DecimalFilterRecursive1',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive2'],
    },
    total=False,
)


DecimalFilterRecursive2 = TypedDict(
    'DecimalFilterRecursive2',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive3'],
    },
    total=False,
)


DecimalFilterRecursive3 = TypedDict(
    'DecimalFilterRecursive3',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive4'],
    },
    total=False,
)


DecimalFilterRecursive4 = TypedDict(
    'DecimalFilterRecursive4',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
            },
    total=False,
)


class DecimalWithAggregatesFilter(StringFilter, total=False):
    _max: 'DecimalFilter'
    _min: 'DecimalFilter'
    _sum: 'DecimalFilter'
    _avg: 'DecimalFilter'
    _count: 'IntFilter'


class _FloatSetInput(TypedDict):
    set: float


class _FloatDivideInput(TypedDict):
    divide: float


class _FloatMultiplyInput(TypedDict):
    multiply: float


class _FloatIncrementInput(TypedDict):
    increment: float


class _FloatDecrementInput(TypedDict):
    decrement: float


class _IntSetInput(TypedDict):
    set: int


class _IntDivideInput(TypedDict):
    divide: int


class _IntMultiplyInput(TypedDict):
    multiply: int


class _IntIncrementInput(TypedDict):
    increment: int


class _IntDecrementInput(TypedDict):
    decrement: int


AtomicFloatInput = Union[
    _FloatSetInput,
    _FloatDivideInput,
    _FloatMultiplyInput,
    _FloatIncrementInput,
    _FloatDecrementInput,
]
AtomicIntInput = Union[
    _IntSetInput,
    _IntDivideInput,
    _IntMultiplyInput,
    _IntIncrementInput,
    _IntDecrementInput,
]
AtomicBigIntInput = AtomicIntInput

class _StringListFilterEqualsInput(TypedDict):
    equals: Optional[List[_str]]


class _StringListFilterHasInput(TypedDict):
    has: _str


class _StringListFilterHasEveryInput(TypedDict):
    has_every: List[_str]


class _StringListFilterHasSomeInput(TypedDict):
    has_some: List[_str]


class _StringListFilterIsEmptyInput(TypedDict):
    is_empty: bool


StringListFilter = Union[
    _StringListFilterHasInput,
    _StringListFilterEqualsInput,
    _StringListFilterHasSomeInput,
    _StringListFilterIsEmptyInput,
    _StringListFilterHasEveryInput,
]


class _StringListUpdateSet(TypedDict):
    set: List[_str]


class _StringListUpdatePush(TypedDict):
    push: List[_str]


StringListUpdate = Union[
    List[_str],
    _StringListUpdateSet,
    _StringListUpdatePush,
]

class _BytesListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Base64']]


class _BytesListFilterHasInput(TypedDict):
    has: 'fields.Base64'


class _BytesListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Base64']


class _BytesListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Base64']


class _BytesListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BytesListFilter = Union[
    _BytesListFilterHasInput,
    _BytesListFilterEqualsInput,
    _BytesListFilterHasSomeInput,
    _BytesListFilterIsEmptyInput,
    _BytesListFilterHasEveryInput,
]


class _BytesListUpdateSet(TypedDict):
    set: List['fields.Base64']


class _BytesListUpdatePush(TypedDict):
    push: List['fields.Base64']


BytesListUpdate = Union[
    List['fields.Base64'],
    _BytesListUpdateSet,
    _BytesListUpdatePush,
]

class _DateTimeListFilterEqualsInput(TypedDict):
    equals: Optional[List[datetime.datetime]]


class _DateTimeListFilterHasInput(TypedDict):
    has: datetime.datetime


class _DateTimeListFilterHasEveryInput(TypedDict):
    has_every: List[datetime.datetime]


class _DateTimeListFilterHasSomeInput(TypedDict):
    has_some: List[datetime.datetime]


class _DateTimeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DateTimeListFilter = Union[
    _DateTimeListFilterHasInput,
    _DateTimeListFilterEqualsInput,
    _DateTimeListFilterHasSomeInput,
    _DateTimeListFilterIsEmptyInput,
    _DateTimeListFilterHasEveryInput,
]


class _DateTimeListUpdateSet(TypedDict):
    set: List[datetime.datetime]


class _DateTimeListUpdatePush(TypedDict):
    push: List[datetime.datetime]


DateTimeListUpdate = Union[
    List[datetime.datetime],
    _DateTimeListUpdateSet,
    _DateTimeListUpdatePush,
]

class _BooleanListFilterEqualsInput(TypedDict):
    equals: Optional[List[_bool]]


class _BooleanListFilterHasInput(TypedDict):
    has: _bool


class _BooleanListFilterHasEveryInput(TypedDict):
    has_every: List[_bool]


class _BooleanListFilterHasSomeInput(TypedDict):
    has_some: List[_bool]


class _BooleanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BooleanListFilter = Union[
    _BooleanListFilterHasInput,
    _BooleanListFilterEqualsInput,
    _BooleanListFilterHasSomeInput,
    _BooleanListFilterIsEmptyInput,
    _BooleanListFilterHasEveryInput,
]


class _BooleanListUpdateSet(TypedDict):
    set: List[_bool]


class _BooleanListUpdatePush(TypedDict):
    push: List[_bool]


BooleanListUpdate = Union[
    List[_bool],
    _BooleanListUpdateSet,
    _BooleanListUpdatePush,
]

class _IntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _IntListFilterHasInput(TypedDict):
    has: _int


class _IntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _IntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _IntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


IntListFilter = Union[
    _IntListFilterHasInput,
    _IntListFilterEqualsInput,
    _IntListFilterHasSomeInput,
    _IntListFilterIsEmptyInput,
    _IntListFilterHasEveryInput,
]


class _IntListUpdateSet(TypedDict):
    set: List[_int]


class _IntListUpdatePush(TypedDict):
    push: List[_int]


IntListUpdate = Union[
    List[_int],
    _IntListUpdateSet,
    _IntListUpdatePush,
]

class _BigIntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _BigIntListFilterHasInput(TypedDict):
    has: _int


class _BigIntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _BigIntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _BigIntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BigIntListFilter = Union[
    _BigIntListFilterHasInput,
    _BigIntListFilterEqualsInput,
    _BigIntListFilterHasSomeInput,
    _BigIntListFilterIsEmptyInput,
    _BigIntListFilterHasEveryInput,
]


class _BigIntListUpdateSet(TypedDict):
    set: List[_int]


class _BigIntListUpdatePush(TypedDict):
    push: List[_int]


BigIntListUpdate = Union[
    List[_int],
    _BigIntListUpdateSet,
    _BigIntListUpdatePush,
]

class _FloatListFilterEqualsInput(TypedDict):
    equals: Optional[List[_float]]


class _FloatListFilterHasInput(TypedDict):
    has: _float


class _FloatListFilterHasEveryInput(TypedDict):
    has_every: List[_float]


class _FloatListFilterHasSomeInput(TypedDict):
    has_some: List[_float]


class _FloatListFilterIsEmptyInput(TypedDict):
    is_empty: bool


FloatListFilter = Union[
    _FloatListFilterHasInput,
    _FloatListFilterEqualsInput,
    _FloatListFilterHasSomeInput,
    _FloatListFilterIsEmptyInput,
    _FloatListFilterHasEveryInput,
]


class _FloatListUpdateSet(TypedDict):
    set: List[_float]


class _FloatListUpdatePush(TypedDict):
    push: List[_float]


FloatListUpdate = Union[
    List[_float],
    _FloatListUpdateSet,
    _FloatListUpdatePush,
]

class _JsonListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Json']]


class _JsonListFilterHasInput(TypedDict):
    has: 'fields.Json'


class _JsonListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Json']


class _JsonListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Json']


class _JsonListFilterIsEmptyInput(TypedDict):
    is_empty: bool


JsonListFilter = Union[
    _JsonListFilterHasInput,
    _JsonListFilterEqualsInput,
    _JsonListFilterHasSomeInput,
    _JsonListFilterIsEmptyInput,
    _JsonListFilterHasEveryInput,
]


class _JsonListUpdateSet(TypedDict):
    set: List['fields.Json']


class _JsonListUpdatePush(TypedDict):
    push: List['fields.Json']


JsonListUpdate = Union[
    List['fields.Json'],
    _JsonListUpdateSet,
    _JsonListUpdatePush,
]

class _DecimalListFilterEqualsInput(TypedDict):
    equals: Optional[List[decimal.Decimal]]


class _DecimalListFilterHasInput(TypedDict):
    has: decimal.Decimal


class _DecimalListFilterHasEveryInput(TypedDict):
    has_every: List[decimal.Decimal]


class _DecimalListFilterHasSomeInput(TypedDict):
    has_some: List[decimal.Decimal]


class _DecimalListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DecimalListFilter = Union[
    _DecimalListFilterHasInput,
    _DecimalListFilterEqualsInput,
    _DecimalListFilterHasSomeInput,
    _DecimalListFilterIsEmptyInput,
    _DecimalListFilterHasEveryInput,
]


class _DecimalListUpdateSet(TypedDict):
    set: List[decimal.Decimal]


class _DecimalListUpdatePush(TypedDict):
    push: List[decimal.Decimal]


DecimalListUpdate = Union[
    List[decimal.Decimal],
    _DecimalListUpdateSet,
    _DecimalListUpdatePush,
]


# GeneratedImage types

class GeneratedImageOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the GeneratedImage create method"""
    id: _str
    createdAt: datetime.datetime


class GeneratedImageCreateInput(GeneratedImageOptionalCreateInput):
    """Required arguments to the GeneratedImage create method"""
    userId: _str
    prompt: _str
    imageUrl: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GeneratedImageOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the GeneratedImage create method, without relations"""
    id: _str
    createdAt: datetime.datetime


class GeneratedImageCreateWithoutRelationsInput(GeneratedImageOptionalCreateWithoutRelationsInput):
    """Required arguments to the GeneratedImage create method, without relations"""
    userId: _str
    prompt: _str
    imageUrl: _str

class GeneratedImageConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'GeneratedImageCreateWithoutRelationsInput'
    where: 'GeneratedImageWhereUniqueInput'

class GeneratedImageCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedImageCreateWithoutRelationsInput'
    connect: 'GeneratedImageWhereUniqueInput'
    connect_or_create: 'GeneratedImageConnectOrCreateWithoutRelationsInput'


class GeneratedImageCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GeneratedImageCreateWithoutRelationsInput', List['GeneratedImageCreateWithoutRelationsInput']]
    connect: Union['GeneratedImageWhereUniqueInput', List['GeneratedImageWhereUniqueInput']]
    connect_or_create: Union['GeneratedImageConnectOrCreateWithoutRelationsInput', List['GeneratedImageConnectOrCreateWithoutRelationsInput']]

_GeneratedImageWhereUnique_id_Input = TypedDict(
    '_GeneratedImageWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

GeneratedImageWhereUniqueInput = _GeneratedImageWhereUnique_id_Input


class GeneratedImageUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime


class GeneratedImageUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime


class GeneratedImageUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GeneratedImageCreateWithoutRelationsInput']
    connect: List['GeneratedImageWhereUniqueInput']
    connect_or_create: List['GeneratedImageConnectOrCreateWithoutRelationsInput']
    set: List['GeneratedImageWhereUniqueInput']
    disconnect: List['GeneratedImageWhereUniqueInput']
    delete: List['GeneratedImageWhereUniqueInput']

    # TODO
    # update: List['GeneratedImageUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GeneratedImageUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GeneratedImageScalarWhereInput']
    # upsert: List['GeneratedImageUpserteWithWhereUniqueWithoutRelationsInput']


class GeneratedImageUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedImageCreateWithoutRelationsInput'
    connect: 'GeneratedImageWhereUniqueInput'
    connect_or_create: 'GeneratedImageConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GeneratedImageUpdateInput'
    # upsert: 'GeneratedImageUpsertWithoutRelationsInput'


class GeneratedImageUpsertInput(TypedDict):
    create: 'GeneratedImageCreateInput'
    update: 'GeneratedImageUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_GeneratedImage_id_OrderByInput = TypedDict(
    '_GeneratedImage_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_GeneratedImage_userId_OrderByInput = TypedDict(
    '_GeneratedImage_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_GeneratedImage_prompt_OrderByInput = TypedDict(
    '_GeneratedImage_prompt_OrderByInput',
    {
        'prompt': 'SortOrder',
    },
    total=True
)

_GeneratedImage_imageUrl_OrderByInput = TypedDict(
    '_GeneratedImage_imageUrl_OrderByInput',
    {
        'imageUrl': 'SortOrder',
    },
    total=True
)

_GeneratedImage_createdAt_OrderByInput = TypedDict(
    '_GeneratedImage_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_GeneratedImage_RelevanceInner = TypedDict(
    '_GeneratedImage_RelevanceInner',
    {
        'fields': 'List[GeneratedImageScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_GeneratedImage_RelevanceOrderByInput = TypedDict(
    '_GeneratedImage_RelevanceOrderByInput',
    {
        '_relevance': '_GeneratedImage_RelevanceInner',
    },
    total=True
)

GeneratedImageOrderByInput = Union[
    '_GeneratedImage_id_OrderByInput',
    '_GeneratedImage_userId_OrderByInput',
    '_GeneratedImage_prompt_OrderByInput',
    '_GeneratedImage_imageUrl_OrderByInput',
    '_GeneratedImage_createdAt_OrderByInput',
    '_GeneratedImage_RelevanceOrderByInput',
]



# recursive GeneratedImage types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GeneratedImageRelationFilter = TypedDict(
    'GeneratedImageRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GeneratedImageListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GeneratedImageInclude(TypedDict, total=False):
    """GeneratedImage relational arguments"""


    

class GeneratedImageIncludeFromGeneratedImage(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedImageIncludeFromGeneratedImageRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedImageIncludeFromGeneratedImageRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedImageIncludeFromGeneratedImageRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedImageIncludeFromGeneratedImageRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""

    

class GeneratedImageArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class GeneratedImageArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class GeneratedImageArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class GeneratedImageArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class GeneratedImageArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    
    

class FindManyGeneratedImageArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class FindManyGeneratedImageArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class FindManyGeneratedImageArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class FindManyGeneratedImageArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class FindManyGeneratedImageArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    
    

class GeneratedVideoIncludeFromGeneratedImage(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedVideoIncludeFromGeneratedImageRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedVideoIncludeFromGeneratedImageRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedVideoIncludeFromGeneratedImageRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedVideoIncludeFromGeneratedImageRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""

    

class GeneratedVideoArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class GeneratedVideoArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class GeneratedVideoArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class GeneratedVideoArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class GeneratedVideoArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    
    

class FindManyGeneratedVideoArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class FindManyGeneratedVideoArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class FindManyGeneratedVideoArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class FindManyGeneratedVideoArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class FindManyGeneratedVideoArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    
    

class GeneratedSummaryIncludeFromGeneratedImage(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSummaryIncludeFromGeneratedImageRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSummaryIncludeFromGeneratedImageRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSummaryIncludeFromGeneratedImageRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSummaryIncludeFromGeneratedImageRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""

    

class GeneratedSummaryArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class GeneratedSummaryArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class GeneratedSummaryArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class GeneratedSummaryArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class GeneratedSummaryArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    
    

class FindManyGeneratedSummaryArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class FindManyGeneratedSummaryArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class FindManyGeneratedSummaryArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class FindManyGeneratedSummaryArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class FindManyGeneratedSummaryArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    
    

class GeneratedGhibliIncludeFromGeneratedImage(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedGhibliIncludeFromGeneratedImageRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedGhibliIncludeFromGeneratedImageRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedGhibliIncludeFromGeneratedImageRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedGhibliIncludeFromGeneratedImageRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""

    

class GeneratedGhibliArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class GeneratedGhibliArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class GeneratedGhibliArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class GeneratedGhibliArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class GeneratedGhibliArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    
    

class FindManyGeneratedGhibliArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class FindManyGeneratedGhibliArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class FindManyGeneratedGhibliArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class FindManyGeneratedGhibliArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class FindManyGeneratedGhibliArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    
    

class GeneratedSVGIncludeFromGeneratedImage(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSVGIncludeFromGeneratedImageRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSVGIncludeFromGeneratedImageRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSVGIncludeFromGeneratedImageRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""


class GeneratedSVGIncludeFromGeneratedImageRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedImage"""

    

class GeneratedSVGArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class GeneratedSVGArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class GeneratedSVGArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class GeneratedSVGArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class GeneratedSVGArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    
    

class FindManyGeneratedSVGArgsFromGeneratedImage(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class FindManyGeneratedSVGArgsFromGeneratedImageRecursive1(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class FindManyGeneratedSVGArgsFromGeneratedImageRecursive2(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class FindManyGeneratedSVGArgsFromGeneratedImageRecursive3(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class FindManyGeneratedSVGArgsFromGeneratedImageRecursive4(TypedDict, total=False):
    """Arguments for GeneratedImage"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    


FindManyGeneratedImageArgs = FindManyGeneratedImageArgsFromGeneratedImage
FindFirstGeneratedImageArgs = FindManyGeneratedImageArgsFromGeneratedImage


    

class GeneratedImageWhereInput(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedImageWhereInputRecursive1', List['GeneratedImageWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GeneratedImageWhereInputRecursive1']
    OR: List['GeneratedImageWhereInputRecursive1']
    NOT: List['GeneratedImageWhereInputRecursive1']


class GeneratedImageWhereInputRecursive1(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedImageWhereInputRecursive2', List['GeneratedImageWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GeneratedImageWhereInputRecursive2']
    OR: List['GeneratedImageWhereInputRecursive2']
    NOT: List['GeneratedImageWhereInputRecursive2']


class GeneratedImageWhereInputRecursive2(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedImageWhereInputRecursive3', List['GeneratedImageWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GeneratedImageWhereInputRecursive3']
    OR: List['GeneratedImageWhereInputRecursive3']
    NOT: List['GeneratedImageWhereInputRecursive3']


class GeneratedImageWhereInputRecursive3(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedImageWhereInputRecursive4', List['GeneratedImageWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GeneratedImageWhereInputRecursive4']
    OR: List['GeneratedImageWhereInputRecursive4']
    NOT: List['GeneratedImageWhereInputRecursive4']


class GeneratedImageWhereInputRecursive4(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate GeneratedImage types


    

class GeneratedImageScalarWhereWithAggregatesInput(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedImageScalarWhereWithAggregatesInputRecursive1']
    OR: List['GeneratedImageScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GeneratedImageScalarWhereWithAggregatesInputRecursive1']


class GeneratedImageScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedImageScalarWhereWithAggregatesInputRecursive2']
    OR: List['GeneratedImageScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GeneratedImageScalarWhereWithAggregatesInputRecursive2']


class GeneratedImageScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedImageScalarWhereWithAggregatesInputRecursive3']
    OR: List['GeneratedImageScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GeneratedImageScalarWhereWithAggregatesInputRecursive3']


class GeneratedImageScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedImageScalarWhereWithAggregatesInputRecursive4']
    OR: List['GeneratedImageScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GeneratedImageScalarWhereWithAggregatesInputRecursive4']


class GeneratedImageScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """GeneratedImage arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class GeneratedImageGroupByOutput(TypedDict, total=False):
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime
    _sum: 'GeneratedImageSumAggregateOutput'
    _avg: 'GeneratedImageAvgAggregateOutput'
    _min: 'GeneratedImageMinAggregateOutput'
    _max: 'GeneratedImageMaxAggregateOutput'
    _count: 'GeneratedImageCountAggregateOutput'


class GeneratedImageAvgAggregateOutput(TypedDict, total=False):
    """GeneratedImage output for aggregating averages"""


class GeneratedImageSumAggregateOutput(TypedDict, total=False):
    """GeneratedImage output for aggregating sums"""


class GeneratedImageScalarAggregateOutput(TypedDict, total=False):
    """GeneratedImage output including scalar fields"""
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime


GeneratedImageMinAggregateOutput = GeneratedImageScalarAggregateOutput
GeneratedImageMaxAggregateOutput = GeneratedImageScalarAggregateOutput


class GeneratedImageMaxAggregateInput(TypedDict, total=False):
    """GeneratedImage input for aggregating by max"""
    id: bool
    userId: bool
    prompt: bool
    imageUrl: bool
    createdAt: bool


class GeneratedImageMinAggregateInput(TypedDict, total=False):
    """GeneratedImage input for aggregating by min"""
    id: bool
    userId: bool
    prompt: bool
    imageUrl: bool
    createdAt: bool


class GeneratedImageNumberAggregateInput(TypedDict, total=False):
    """GeneratedImage input for aggregating numbers"""


GeneratedImageAvgAggregateInput = GeneratedImageNumberAggregateInput
GeneratedImageSumAggregateInput = GeneratedImageNumberAggregateInput


GeneratedImageCountAggregateInput = TypedDict(
    'GeneratedImageCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'prompt': bool,
        'imageUrl': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

GeneratedImageCountAggregateOutput = TypedDict(
    'GeneratedImageCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'prompt': int,
        'imageUrl': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


GeneratedImageKeys = Literal[
    'id',
    'userId',
    'prompt',
    'imageUrl',
    'createdAt',
]
GeneratedImageScalarFieldKeys = Literal[
    'id',
    'userId',
    'prompt',
    'imageUrl',
    'createdAt',
]
GeneratedImageScalarFieldKeysT = TypeVar('GeneratedImageScalarFieldKeysT', bound=GeneratedImageScalarFieldKeys)

GeneratedImageRelationalFieldKeys = _NoneType

# GeneratedVideo types

class GeneratedVideoOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the GeneratedVideo create method"""
    id: _str
    createdAt: datetime.datetime


class GeneratedVideoCreateInput(GeneratedVideoOptionalCreateInput):
    """Required arguments to the GeneratedVideo create method"""
    userId: _str
    prompt: _str
    videoUrl: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GeneratedVideoOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the GeneratedVideo create method, without relations"""
    id: _str
    createdAt: datetime.datetime


class GeneratedVideoCreateWithoutRelationsInput(GeneratedVideoOptionalCreateWithoutRelationsInput):
    """Required arguments to the GeneratedVideo create method, without relations"""
    userId: _str
    prompt: _str
    videoUrl: _str

class GeneratedVideoConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'GeneratedVideoCreateWithoutRelationsInput'
    where: 'GeneratedVideoWhereUniqueInput'

class GeneratedVideoCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedVideoCreateWithoutRelationsInput'
    connect: 'GeneratedVideoWhereUniqueInput'
    connect_or_create: 'GeneratedVideoConnectOrCreateWithoutRelationsInput'


class GeneratedVideoCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GeneratedVideoCreateWithoutRelationsInput', List['GeneratedVideoCreateWithoutRelationsInput']]
    connect: Union['GeneratedVideoWhereUniqueInput', List['GeneratedVideoWhereUniqueInput']]
    connect_or_create: Union['GeneratedVideoConnectOrCreateWithoutRelationsInput', List['GeneratedVideoConnectOrCreateWithoutRelationsInput']]

_GeneratedVideoWhereUnique_id_Input = TypedDict(
    '_GeneratedVideoWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

GeneratedVideoWhereUniqueInput = _GeneratedVideoWhereUnique_id_Input


class GeneratedVideoUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    userId: _str
    prompt: _str
    videoUrl: _str
    createdAt: datetime.datetime


class GeneratedVideoUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    userId: _str
    prompt: _str
    videoUrl: _str
    createdAt: datetime.datetime


class GeneratedVideoUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GeneratedVideoCreateWithoutRelationsInput']
    connect: List['GeneratedVideoWhereUniqueInput']
    connect_or_create: List['GeneratedVideoConnectOrCreateWithoutRelationsInput']
    set: List['GeneratedVideoWhereUniqueInput']
    disconnect: List['GeneratedVideoWhereUniqueInput']
    delete: List['GeneratedVideoWhereUniqueInput']

    # TODO
    # update: List['GeneratedVideoUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GeneratedVideoUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GeneratedVideoScalarWhereInput']
    # upsert: List['GeneratedVideoUpserteWithWhereUniqueWithoutRelationsInput']


class GeneratedVideoUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedVideoCreateWithoutRelationsInput'
    connect: 'GeneratedVideoWhereUniqueInput'
    connect_or_create: 'GeneratedVideoConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GeneratedVideoUpdateInput'
    # upsert: 'GeneratedVideoUpsertWithoutRelationsInput'


class GeneratedVideoUpsertInput(TypedDict):
    create: 'GeneratedVideoCreateInput'
    update: 'GeneratedVideoUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_GeneratedVideo_id_OrderByInput = TypedDict(
    '_GeneratedVideo_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_GeneratedVideo_userId_OrderByInput = TypedDict(
    '_GeneratedVideo_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_GeneratedVideo_prompt_OrderByInput = TypedDict(
    '_GeneratedVideo_prompt_OrderByInput',
    {
        'prompt': 'SortOrder',
    },
    total=True
)

_GeneratedVideo_videoUrl_OrderByInput = TypedDict(
    '_GeneratedVideo_videoUrl_OrderByInput',
    {
        'videoUrl': 'SortOrder',
    },
    total=True
)

_GeneratedVideo_createdAt_OrderByInput = TypedDict(
    '_GeneratedVideo_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_GeneratedVideo_RelevanceInner = TypedDict(
    '_GeneratedVideo_RelevanceInner',
    {
        'fields': 'List[GeneratedVideoScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_GeneratedVideo_RelevanceOrderByInput = TypedDict(
    '_GeneratedVideo_RelevanceOrderByInput',
    {
        '_relevance': '_GeneratedVideo_RelevanceInner',
    },
    total=True
)

GeneratedVideoOrderByInput = Union[
    '_GeneratedVideo_id_OrderByInput',
    '_GeneratedVideo_userId_OrderByInput',
    '_GeneratedVideo_prompt_OrderByInput',
    '_GeneratedVideo_videoUrl_OrderByInput',
    '_GeneratedVideo_createdAt_OrderByInput',
    '_GeneratedVideo_RelevanceOrderByInput',
]



# recursive GeneratedVideo types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GeneratedVideoRelationFilter = TypedDict(
    'GeneratedVideoRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GeneratedVideoListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GeneratedVideoInclude(TypedDict, total=False):
    """GeneratedVideo relational arguments"""


    

class GeneratedImageIncludeFromGeneratedVideo(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedImageIncludeFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedImageIncludeFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedImageIncludeFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedImageIncludeFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""

    

class GeneratedImageArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class GeneratedImageArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class GeneratedImageArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class GeneratedImageArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class GeneratedImageArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    
    

class FindManyGeneratedImageArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class FindManyGeneratedImageArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class FindManyGeneratedImageArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class FindManyGeneratedImageArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class FindManyGeneratedImageArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    
    

class GeneratedVideoIncludeFromGeneratedVideo(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedVideoIncludeFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedVideoIncludeFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedVideoIncludeFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedVideoIncludeFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""

    

class GeneratedVideoArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class GeneratedVideoArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class GeneratedVideoArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class GeneratedVideoArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class GeneratedVideoArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    
    

class FindManyGeneratedVideoArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class FindManyGeneratedVideoArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class FindManyGeneratedVideoArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class FindManyGeneratedVideoArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class FindManyGeneratedVideoArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    
    

class GeneratedSummaryIncludeFromGeneratedVideo(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSummaryIncludeFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSummaryIncludeFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSummaryIncludeFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSummaryIncludeFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""

    

class GeneratedSummaryArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class GeneratedSummaryArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class GeneratedSummaryArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class GeneratedSummaryArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class GeneratedSummaryArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    
    

class FindManyGeneratedSummaryArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class FindManyGeneratedSummaryArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class FindManyGeneratedSummaryArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class FindManyGeneratedSummaryArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class FindManyGeneratedSummaryArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    
    

class GeneratedGhibliIncludeFromGeneratedVideo(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedGhibliIncludeFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedGhibliIncludeFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedGhibliIncludeFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedGhibliIncludeFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""

    

class GeneratedGhibliArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class GeneratedGhibliArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class GeneratedGhibliArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class GeneratedGhibliArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class GeneratedGhibliArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    
    

class FindManyGeneratedGhibliArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class FindManyGeneratedGhibliArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class FindManyGeneratedGhibliArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class FindManyGeneratedGhibliArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class FindManyGeneratedGhibliArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    
    

class GeneratedSVGIncludeFromGeneratedVideo(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSVGIncludeFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSVGIncludeFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSVGIncludeFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""


class GeneratedSVGIncludeFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedVideo"""

    

class GeneratedSVGArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class GeneratedSVGArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class GeneratedSVGArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class GeneratedSVGArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class GeneratedSVGArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    
    

class FindManyGeneratedSVGArgsFromGeneratedVideo(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class FindManyGeneratedSVGArgsFromGeneratedVideoRecursive1(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class FindManyGeneratedSVGArgsFromGeneratedVideoRecursive2(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class FindManyGeneratedSVGArgsFromGeneratedVideoRecursive3(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class FindManyGeneratedSVGArgsFromGeneratedVideoRecursive4(TypedDict, total=False):
    """Arguments for GeneratedVideo"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    


FindManyGeneratedVideoArgs = FindManyGeneratedVideoArgsFromGeneratedVideo
FindFirstGeneratedVideoArgs = FindManyGeneratedVideoArgsFromGeneratedVideo


    

class GeneratedVideoWhereInput(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    videoUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedVideoWhereInputRecursive1', List['GeneratedVideoWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GeneratedVideoWhereInputRecursive1']
    OR: List['GeneratedVideoWhereInputRecursive1']
    NOT: List['GeneratedVideoWhereInputRecursive1']


class GeneratedVideoWhereInputRecursive1(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    videoUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedVideoWhereInputRecursive2', List['GeneratedVideoWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GeneratedVideoWhereInputRecursive2']
    OR: List['GeneratedVideoWhereInputRecursive2']
    NOT: List['GeneratedVideoWhereInputRecursive2']


class GeneratedVideoWhereInputRecursive2(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    videoUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedVideoWhereInputRecursive3', List['GeneratedVideoWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GeneratedVideoWhereInputRecursive3']
    OR: List['GeneratedVideoWhereInputRecursive3']
    NOT: List['GeneratedVideoWhereInputRecursive3']


class GeneratedVideoWhereInputRecursive3(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    videoUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedVideoWhereInputRecursive4', List['GeneratedVideoWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GeneratedVideoWhereInputRecursive4']
    OR: List['GeneratedVideoWhereInputRecursive4']
    NOT: List['GeneratedVideoWhereInputRecursive4']


class GeneratedVideoWhereInputRecursive4(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    videoUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate GeneratedVideo types


    

class GeneratedVideoScalarWhereWithAggregatesInput(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive1']
    OR: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive1']


class GeneratedVideoScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive2']
    OR: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive2']


class GeneratedVideoScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive3']
    OR: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive3']


class GeneratedVideoScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive4']
    OR: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GeneratedVideoScalarWhereWithAggregatesInputRecursive4']


class GeneratedVideoScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """GeneratedVideo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class GeneratedVideoGroupByOutput(TypedDict, total=False):
    id: _str
    userId: _str
    prompt: _str
    videoUrl: _str
    createdAt: datetime.datetime
    _sum: 'GeneratedVideoSumAggregateOutput'
    _avg: 'GeneratedVideoAvgAggregateOutput'
    _min: 'GeneratedVideoMinAggregateOutput'
    _max: 'GeneratedVideoMaxAggregateOutput'
    _count: 'GeneratedVideoCountAggregateOutput'


class GeneratedVideoAvgAggregateOutput(TypedDict, total=False):
    """GeneratedVideo output for aggregating averages"""


class GeneratedVideoSumAggregateOutput(TypedDict, total=False):
    """GeneratedVideo output for aggregating sums"""


class GeneratedVideoScalarAggregateOutput(TypedDict, total=False):
    """GeneratedVideo output including scalar fields"""
    id: _str
    userId: _str
    prompt: _str
    videoUrl: _str
    createdAt: datetime.datetime


GeneratedVideoMinAggregateOutput = GeneratedVideoScalarAggregateOutput
GeneratedVideoMaxAggregateOutput = GeneratedVideoScalarAggregateOutput


class GeneratedVideoMaxAggregateInput(TypedDict, total=False):
    """GeneratedVideo input for aggregating by max"""
    id: bool
    userId: bool
    prompt: bool
    videoUrl: bool
    createdAt: bool


class GeneratedVideoMinAggregateInput(TypedDict, total=False):
    """GeneratedVideo input for aggregating by min"""
    id: bool
    userId: bool
    prompt: bool
    videoUrl: bool
    createdAt: bool


class GeneratedVideoNumberAggregateInput(TypedDict, total=False):
    """GeneratedVideo input for aggregating numbers"""


GeneratedVideoAvgAggregateInput = GeneratedVideoNumberAggregateInput
GeneratedVideoSumAggregateInput = GeneratedVideoNumberAggregateInput


GeneratedVideoCountAggregateInput = TypedDict(
    'GeneratedVideoCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'prompt': bool,
        'videoUrl': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

GeneratedVideoCountAggregateOutput = TypedDict(
    'GeneratedVideoCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'prompt': int,
        'videoUrl': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


GeneratedVideoKeys = Literal[
    'id',
    'userId',
    'prompt',
    'videoUrl',
    'createdAt',
]
GeneratedVideoScalarFieldKeys = Literal[
    'id',
    'userId',
    'prompt',
    'videoUrl',
    'createdAt',
]
GeneratedVideoScalarFieldKeysT = TypeVar('GeneratedVideoScalarFieldKeysT', bound=GeneratedVideoScalarFieldKeys)

GeneratedVideoRelationalFieldKeys = _NoneType

# GeneratedSummary types

class GeneratedSummaryOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the GeneratedSummary create method"""
    id: _str
    createdAt: datetime.datetime


class GeneratedSummaryCreateInput(GeneratedSummaryOptionalCreateInput):
    """Required arguments to the GeneratedSummary create method"""
    userId: _str
    prompt: _str
    summary: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GeneratedSummaryOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the GeneratedSummary create method, without relations"""
    id: _str
    createdAt: datetime.datetime


class GeneratedSummaryCreateWithoutRelationsInput(GeneratedSummaryOptionalCreateWithoutRelationsInput):
    """Required arguments to the GeneratedSummary create method, without relations"""
    userId: _str
    prompt: _str
    summary: _str

class GeneratedSummaryConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'GeneratedSummaryCreateWithoutRelationsInput'
    where: 'GeneratedSummaryWhereUniqueInput'

class GeneratedSummaryCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedSummaryCreateWithoutRelationsInput'
    connect: 'GeneratedSummaryWhereUniqueInput'
    connect_or_create: 'GeneratedSummaryConnectOrCreateWithoutRelationsInput'


class GeneratedSummaryCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GeneratedSummaryCreateWithoutRelationsInput', List['GeneratedSummaryCreateWithoutRelationsInput']]
    connect: Union['GeneratedSummaryWhereUniqueInput', List['GeneratedSummaryWhereUniqueInput']]
    connect_or_create: Union['GeneratedSummaryConnectOrCreateWithoutRelationsInput', List['GeneratedSummaryConnectOrCreateWithoutRelationsInput']]

_GeneratedSummaryWhereUnique_id_Input = TypedDict(
    '_GeneratedSummaryWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

GeneratedSummaryWhereUniqueInput = _GeneratedSummaryWhereUnique_id_Input


class GeneratedSummaryUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    userId: _str
    prompt: _str
    summary: _str
    createdAt: datetime.datetime


class GeneratedSummaryUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    userId: _str
    prompt: _str
    summary: _str
    createdAt: datetime.datetime


class GeneratedSummaryUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GeneratedSummaryCreateWithoutRelationsInput']
    connect: List['GeneratedSummaryWhereUniqueInput']
    connect_or_create: List['GeneratedSummaryConnectOrCreateWithoutRelationsInput']
    set: List['GeneratedSummaryWhereUniqueInput']
    disconnect: List['GeneratedSummaryWhereUniqueInput']
    delete: List['GeneratedSummaryWhereUniqueInput']

    # TODO
    # update: List['GeneratedSummaryUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GeneratedSummaryUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GeneratedSummaryScalarWhereInput']
    # upsert: List['GeneratedSummaryUpserteWithWhereUniqueWithoutRelationsInput']


class GeneratedSummaryUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedSummaryCreateWithoutRelationsInput'
    connect: 'GeneratedSummaryWhereUniqueInput'
    connect_or_create: 'GeneratedSummaryConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GeneratedSummaryUpdateInput'
    # upsert: 'GeneratedSummaryUpsertWithoutRelationsInput'


class GeneratedSummaryUpsertInput(TypedDict):
    create: 'GeneratedSummaryCreateInput'
    update: 'GeneratedSummaryUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_GeneratedSummary_id_OrderByInput = TypedDict(
    '_GeneratedSummary_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_GeneratedSummary_userId_OrderByInput = TypedDict(
    '_GeneratedSummary_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_GeneratedSummary_prompt_OrderByInput = TypedDict(
    '_GeneratedSummary_prompt_OrderByInput',
    {
        'prompt': 'SortOrder',
    },
    total=True
)

_GeneratedSummary_summary_OrderByInput = TypedDict(
    '_GeneratedSummary_summary_OrderByInput',
    {
        'summary': 'SortOrder',
    },
    total=True
)

_GeneratedSummary_createdAt_OrderByInput = TypedDict(
    '_GeneratedSummary_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_GeneratedSummary_RelevanceInner = TypedDict(
    '_GeneratedSummary_RelevanceInner',
    {
        'fields': 'List[GeneratedSummaryScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_GeneratedSummary_RelevanceOrderByInput = TypedDict(
    '_GeneratedSummary_RelevanceOrderByInput',
    {
        '_relevance': '_GeneratedSummary_RelevanceInner',
    },
    total=True
)

GeneratedSummaryOrderByInput = Union[
    '_GeneratedSummary_id_OrderByInput',
    '_GeneratedSummary_userId_OrderByInput',
    '_GeneratedSummary_prompt_OrderByInput',
    '_GeneratedSummary_summary_OrderByInput',
    '_GeneratedSummary_createdAt_OrderByInput',
    '_GeneratedSummary_RelevanceOrderByInput',
]



# recursive GeneratedSummary types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GeneratedSummaryRelationFilter = TypedDict(
    'GeneratedSummaryRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GeneratedSummaryListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GeneratedSummaryInclude(TypedDict, total=False):
    """GeneratedSummary relational arguments"""


    

class GeneratedImageIncludeFromGeneratedSummary(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedImageIncludeFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedImageIncludeFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedImageIncludeFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedImageIncludeFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""

    

class GeneratedImageArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class GeneratedImageArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class GeneratedImageArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class GeneratedImageArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class GeneratedImageArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    
    

class FindManyGeneratedImageArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class FindManyGeneratedImageArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class FindManyGeneratedImageArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class FindManyGeneratedImageArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class FindManyGeneratedImageArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    
    

class GeneratedVideoIncludeFromGeneratedSummary(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedVideoIncludeFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedVideoIncludeFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedVideoIncludeFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedVideoIncludeFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""

    

class GeneratedVideoArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class GeneratedVideoArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class GeneratedVideoArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class GeneratedVideoArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class GeneratedVideoArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    
    

class FindManyGeneratedVideoArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class FindManyGeneratedVideoArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class FindManyGeneratedVideoArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class FindManyGeneratedVideoArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class FindManyGeneratedVideoArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    
    

class GeneratedSummaryIncludeFromGeneratedSummary(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSummaryIncludeFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSummaryIncludeFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSummaryIncludeFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSummaryIncludeFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""

    

class GeneratedSummaryArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class GeneratedSummaryArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class GeneratedSummaryArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class GeneratedSummaryArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class GeneratedSummaryArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    
    

class FindManyGeneratedSummaryArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class FindManyGeneratedSummaryArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class FindManyGeneratedSummaryArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class FindManyGeneratedSummaryArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class FindManyGeneratedSummaryArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    
    

class GeneratedGhibliIncludeFromGeneratedSummary(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedGhibliIncludeFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedGhibliIncludeFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedGhibliIncludeFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedGhibliIncludeFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""

    

class GeneratedGhibliArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class GeneratedGhibliArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class GeneratedGhibliArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class GeneratedGhibliArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class GeneratedGhibliArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    
    

class FindManyGeneratedGhibliArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class FindManyGeneratedGhibliArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class FindManyGeneratedGhibliArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class FindManyGeneratedGhibliArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class FindManyGeneratedGhibliArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    
    

class GeneratedSVGIncludeFromGeneratedSummary(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSVGIncludeFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSVGIncludeFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSVGIncludeFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""


class GeneratedSVGIncludeFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSummary"""

    

class GeneratedSVGArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class GeneratedSVGArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class GeneratedSVGArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class GeneratedSVGArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class GeneratedSVGArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    
    

class FindManyGeneratedSVGArgsFromGeneratedSummary(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class FindManyGeneratedSVGArgsFromGeneratedSummaryRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class FindManyGeneratedSVGArgsFromGeneratedSummaryRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class FindManyGeneratedSVGArgsFromGeneratedSummaryRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class FindManyGeneratedSVGArgsFromGeneratedSummaryRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSummary"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    


FindManyGeneratedSummaryArgs = FindManyGeneratedSummaryArgsFromGeneratedSummary
FindFirstGeneratedSummaryArgs = FindManyGeneratedSummaryArgsFromGeneratedSummary


    

class GeneratedSummaryWhereInput(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    summary: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSummaryWhereInputRecursive1', List['GeneratedSummaryWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSummaryWhereInputRecursive1']
    OR: List['GeneratedSummaryWhereInputRecursive1']
    NOT: List['GeneratedSummaryWhereInputRecursive1']


class GeneratedSummaryWhereInputRecursive1(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    summary: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSummaryWhereInputRecursive2', List['GeneratedSummaryWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSummaryWhereInputRecursive2']
    OR: List['GeneratedSummaryWhereInputRecursive2']
    NOT: List['GeneratedSummaryWhereInputRecursive2']


class GeneratedSummaryWhereInputRecursive2(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    summary: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSummaryWhereInputRecursive3', List['GeneratedSummaryWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSummaryWhereInputRecursive3']
    OR: List['GeneratedSummaryWhereInputRecursive3']
    NOT: List['GeneratedSummaryWhereInputRecursive3']


class GeneratedSummaryWhereInputRecursive3(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    summary: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSummaryWhereInputRecursive4', List['GeneratedSummaryWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSummaryWhereInputRecursive4']
    OR: List['GeneratedSummaryWhereInputRecursive4']
    NOT: List['GeneratedSummaryWhereInputRecursive4']


class GeneratedSummaryWhereInputRecursive4(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    summary: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate GeneratedSummary types


    

class GeneratedSummaryScalarWhereWithAggregatesInput(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    summary: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive1']
    OR: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive1']


class GeneratedSummaryScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    summary: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive2']
    OR: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive2']


class GeneratedSummaryScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    summary: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive3']
    OR: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive3']


class GeneratedSummaryScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    summary: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive4']
    OR: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GeneratedSummaryScalarWhereWithAggregatesInputRecursive4']


class GeneratedSummaryScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """GeneratedSummary arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    summary: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class GeneratedSummaryGroupByOutput(TypedDict, total=False):
    id: _str
    userId: _str
    prompt: _str
    summary: _str
    createdAt: datetime.datetime
    _sum: 'GeneratedSummarySumAggregateOutput'
    _avg: 'GeneratedSummaryAvgAggregateOutput'
    _min: 'GeneratedSummaryMinAggregateOutput'
    _max: 'GeneratedSummaryMaxAggregateOutput'
    _count: 'GeneratedSummaryCountAggregateOutput'


class GeneratedSummaryAvgAggregateOutput(TypedDict, total=False):
    """GeneratedSummary output for aggregating averages"""


class GeneratedSummarySumAggregateOutput(TypedDict, total=False):
    """GeneratedSummary output for aggregating sums"""


class GeneratedSummaryScalarAggregateOutput(TypedDict, total=False):
    """GeneratedSummary output including scalar fields"""
    id: _str
    userId: _str
    prompt: _str
    summary: _str
    createdAt: datetime.datetime


GeneratedSummaryMinAggregateOutput = GeneratedSummaryScalarAggregateOutput
GeneratedSummaryMaxAggregateOutput = GeneratedSummaryScalarAggregateOutput


class GeneratedSummaryMaxAggregateInput(TypedDict, total=False):
    """GeneratedSummary input for aggregating by max"""
    id: bool
    userId: bool
    prompt: bool
    summary: bool
    createdAt: bool


class GeneratedSummaryMinAggregateInput(TypedDict, total=False):
    """GeneratedSummary input for aggregating by min"""
    id: bool
    userId: bool
    prompt: bool
    summary: bool
    createdAt: bool


class GeneratedSummaryNumberAggregateInput(TypedDict, total=False):
    """GeneratedSummary input for aggregating numbers"""


GeneratedSummaryAvgAggregateInput = GeneratedSummaryNumberAggregateInput
GeneratedSummarySumAggregateInput = GeneratedSummaryNumberAggregateInput


GeneratedSummaryCountAggregateInput = TypedDict(
    'GeneratedSummaryCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'prompt': bool,
        'summary': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

GeneratedSummaryCountAggregateOutput = TypedDict(
    'GeneratedSummaryCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'prompt': int,
        'summary': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


GeneratedSummaryKeys = Literal[
    'id',
    'userId',
    'prompt',
    'summary',
    'createdAt',
]
GeneratedSummaryScalarFieldKeys = Literal[
    'id',
    'userId',
    'prompt',
    'summary',
    'createdAt',
]
GeneratedSummaryScalarFieldKeysT = TypeVar('GeneratedSummaryScalarFieldKeysT', bound=GeneratedSummaryScalarFieldKeys)

GeneratedSummaryRelationalFieldKeys = _NoneType

# GeneratedGhibli types

class GeneratedGhibliOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the GeneratedGhibli create method"""
    id: _str
    createdAt: datetime.datetime


class GeneratedGhibliCreateInput(GeneratedGhibliOptionalCreateInput):
    """Required arguments to the GeneratedGhibli create method"""
    userId: _str
    prompt: _str
    imageUrl: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GeneratedGhibliOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the GeneratedGhibli create method, without relations"""
    id: _str
    createdAt: datetime.datetime


class GeneratedGhibliCreateWithoutRelationsInput(GeneratedGhibliOptionalCreateWithoutRelationsInput):
    """Required arguments to the GeneratedGhibli create method, without relations"""
    userId: _str
    prompt: _str
    imageUrl: _str

class GeneratedGhibliConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'GeneratedGhibliCreateWithoutRelationsInput'
    where: 'GeneratedGhibliWhereUniqueInput'

class GeneratedGhibliCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedGhibliCreateWithoutRelationsInput'
    connect: 'GeneratedGhibliWhereUniqueInput'
    connect_or_create: 'GeneratedGhibliConnectOrCreateWithoutRelationsInput'


class GeneratedGhibliCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GeneratedGhibliCreateWithoutRelationsInput', List['GeneratedGhibliCreateWithoutRelationsInput']]
    connect: Union['GeneratedGhibliWhereUniqueInput', List['GeneratedGhibliWhereUniqueInput']]
    connect_or_create: Union['GeneratedGhibliConnectOrCreateWithoutRelationsInput', List['GeneratedGhibliConnectOrCreateWithoutRelationsInput']]

_GeneratedGhibliWhereUnique_id_Input = TypedDict(
    '_GeneratedGhibliWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

GeneratedGhibliWhereUniqueInput = _GeneratedGhibliWhereUnique_id_Input


class GeneratedGhibliUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime


class GeneratedGhibliUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime


class GeneratedGhibliUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GeneratedGhibliCreateWithoutRelationsInput']
    connect: List['GeneratedGhibliWhereUniqueInput']
    connect_or_create: List['GeneratedGhibliConnectOrCreateWithoutRelationsInput']
    set: List['GeneratedGhibliWhereUniqueInput']
    disconnect: List['GeneratedGhibliWhereUniqueInput']
    delete: List['GeneratedGhibliWhereUniqueInput']

    # TODO
    # update: List['GeneratedGhibliUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GeneratedGhibliUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GeneratedGhibliScalarWhereInput']
    # upsert: List['GeneratedGhibliUpserteWithWhereUniqueWithoutRelationsInput']


class GeneratedGhibliUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedGhibliCreateWithoutRelationsInput'
    connect: 'GeneratedGhibliWhereUniqueInput'
    connect_or_create: 'GeneratedGhibliConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GeneratedGhibliUpdateInput'
    # upsert: 'GeneratedGhibliUpsertWithoutRelationsInput'


class GeneratedGhibliUpsertInput(TypedDict):
    create: 'GeneratedGhibliCreateInput'
    update: 'GeneratedGhibliUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_GeneratedGhibli_id_OrderByInput = TypedDict(
    '_GeneratedGhibli_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_GeneratedGhibli_userId_OrderByInput = TypedDict(
    '_GeneratedGhibli_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_GeneratedGhibli_prompt_OrderByInput = TypedDict(
    '_GeneratedGhibli_prompt_OrderByInput',
    {
        'prompt': 'SortOrder',
    },
    total=True
)

_GeneratedGhibli_imageUrl_OrderByInput = TypedDict(
    '_GeneratedGhibli_imageUrl_OrderByInput',
    {
        'imageUrl': 'SortOrder',
    },
    total=True
)

_GeneratedGhibli_createdAt_OrderByInput = TypedDict(
    '_GeneratedGhibli_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_GeneratedGhibli_RelevanceInner = TypedDict(
    '_GeneratedGhibli_RelevanceInner',
    {
        'fields': 'List[GeneratedGhibliScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_GeneratedGhibli_RelevanceOrderByInput = TypedDict(
    '_GeneratedGhibli_RelevanceOrderByInput',
    {
        '_relevance': '_GeneratedGhibli_RelevanceInner',
    },
    total=True
)

GeneratedGhibliOrderByInput = Union[
    '_GeneratedGhibli_id_OrderByInput',
    '_GeneratedGhibli_userId_OrderByInput',
    '_GeneratedGhibli_prompt_OrderByInput',
    '_GeneratedGhibli_imageUrl_OrderByInput',
    '_GeneratedGhibli_createdAt_OrderByInput',
    '_GeneratedGhibli_RelevanceOrderByInput',
]



# recursive GeneratedGhibli types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GeneratedGhibliRelationFilter = TypedDict(
    'GeneratedGhibliRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GeneratedGhibliListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GeneratedGhibliInclude(TypedDict, total=False):
    """GeneratedGhibli relational arguments"""


    

class GeneratedImageIncludeFromGeneratedGhibli(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedImageIncludeFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedImageIncludeFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedImageIncludeFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedImageIncludeFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""

    

class GeneratedImageArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class GeneratedImageArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class GeneratedImageArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class GeneratedImageArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class GeneratedImageArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    
    

class FindManyGeneratedImageArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class FindManyGeneratedImageArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class FindManyGeneratedImageArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class FindManyGeneratedImageArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class FindManyGeneratedImageArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    
    

class GeneratedVideoIncludeFromGeneratedGhibli(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedVideoIncludeFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedVideoIncludeFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedVideoIncludeFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedVideoIncludeFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""

    

class GeneratedVideoArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class GeneratedVideoArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class GeneratedVideoArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class GeneratedVideoArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class GeneratedVideoArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    
    

class FindManyGeneratedVideoArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class FindManyGeneratedVideoArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class FindManyGeneratedVideoArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class FindManyGeneratedVideoArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class FindManyGeneratedVideoArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    
    

class GeneratedSummaryIncludeFromGeneratedGhibli(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSummaryIncludeFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSummaryIncludeFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSummaryIncludeFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSummaryIncludeFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""

    

class GeneratedSummaryArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class GeneratedSummaryArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class GeneratedSummaryArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class GeneratedSummaryArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class GeneratedSummaryArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    
    

class FindManyGeneratedSummaryArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class FindManyGeneratedSummaryArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class FindManyGeneratedSummaryArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class FindManyGeneratedSummaryArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class FindManyGeneratedSummaryArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    
    

class GeneratedGhibliIncludeFromGeneratedGhibli(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedGhibliIncludeFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedGhibliIncludeFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedGhibliIncludeFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedGhibliIncludeFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""

    

class GeneratedGhibliArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class GeneratedGhibliArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class GeneratedGhibliArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class GeneratedGhibliArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class GeneratedGhibliArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    
    

class FindManyGeneratedGhibliArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class FindManyGeneratedGhibliArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class FindManyGeneratedGhibliArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class FindManyGeneratedGhibliArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class FindManyGeneratedGhibliArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    
    

class GeneratedSVGIncludeFromGeneratedGhibli(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSVGIncludeFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSVGIncludeFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSVGIncludeFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""


class GeneratedSVGIncludeFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedGhibli"""

    

class GeneratedSVGArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class GeneratedSVGArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class GeneratedSVGArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class GeneratedSVGArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class GeneratedSVGArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    
    

class FindManyGeneratedSVGArgsFromGeneratedGhibli(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class FindManyGeneratedSVGArgsFromGeneratedGhibliRecursive1(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class FindManyGeneratedSVGArgsFromGeneratedGhibliRecursive2(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class FindManyGeneratedSVGArgsFromGeneratedGhibliRecursive3(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class FindManyGeneratedSVGArgsFromGeneratedGhibliRecursive4(TypedDict, total=False):
    """Arguments for GeneratedGhibli"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    


FindManyGeneratedGhibliArgs = FindManyGeneratedGhibliArgsFromGeneratedGhibli
FindFirstGeneratedGhibliArgs = FindManyGeneratedGhibliArgsFromGeneratedGhibli


    

class GeneratedGhibliWhereInput(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedGhibliWhereInputRecursive1', List['GeneratedGhibliWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GeneratedGhibliWhereInputRecursive1']
    OR: List['GeneratedGhibliWhereInputRecursive1']
    NOT: List['GeneratedGhibliWhereInputRecursive1']


class GeneratedGhibliWhereInputRecursive1(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedGhibliWhereInputRecursive2', List['GeneratedGhibliWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GeneratedGhibliWhereInputRecursive2']
    OR: List['GeneratedGhibliWhereInputRecursive2']
    NOT: List['GeneratedGhibliWhereInputRecursive2']


class GeneratedGhibliWhereInputRecursive2(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedGhibliWhereInputRecursive3', List['GeneratedGhibliWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GeneratedGhibliWhereInputRecursive3']
    OR: List['GeneratedGhibliWhereInputRecursive3']
    NOT: List['GeneratedGhibliWhereInputRecursive3']


class GeneratedGhibliWhereInputRecursive3(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedGhibliWhereInputRecursive4', List['GeneratedGhibliWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GeneratedGhibliWhereInputRecursive4']
    OR: List['GeneratedGhibliWhereInputRecursive4']
    NOT: List['GeneratedGhibliWhereInputRecursive4']


class GeneratedGhibliWhereInputRecursive4(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    imageUrl: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate GeneratedGhibli types


    

class GeneratedGhibliScalarWhereWithAggregatesInput(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive1']
    OR: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive1']


class GeneratedGhibliScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive2']
    OR: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive2']


class GeneratedGhibliScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive3']
    OR: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive3']


class GeneratedGhibliScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive4']
    OR: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GeneratedGhibliScalarWhereWithAggregatesInputRecursive4']


class GeneratedGhibliScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """GeneratedGhibli arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    imageUrl: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class GeneratedGhibliGroupByOutput(TypedDict, total=False):
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime
    _sum: 'GeneratedGhibliSumAggregateOutput'
    _avg: 'GeneratedGhibliAvgAggregateOutput'
    _min: 'GeneratedGhibliMinAggregateOutput'
    _max: 'GeneratedGhibliMaxAggregateOutput'
    _count: 'GeneratedGhibliCountAggregateOutput'


class GeneratedGhibliAvgAggregateOutput(TypedDict, total=False):
    """GeneratedGhibli output for aggregating averages"""


class GeneratedGhibliSumAggregateOutput(TypedDict, total=False):
    """GeneratedGhibli output for aggregating sums"""


class GeneratedGhibliScalarAggregateOutput(TypedDict, total=False):
    """GeneratedGhibli output including scalar fields"""
    id: _str
    userId: _str
    prompt: _str
    imageUrl: _str
    createdAt: datetime.datetime


GeneratedGhibliMinAggregateOutput = GeneratedGhibliScalarAggregateOutput
GeneratedGhibliMaxAggregateOutput = GeneratedGhibliScalarAggregateOutput


class GeneratedGhibliMaxAggregateInput(TypedDict, total=False):
    """GeneratedGhibli input for aggregating by max"""
    id: bool
    userId: bool
    prompt: bool
    imageUrl: bool
    createdAt: bool


class GeneratedGhibliMinAggregateInput(TypedDict, total=False):
    """GeneratedGhibli input for aggregating by min"""
    id: bool
    userId: bool
    prompt: bool
    imageUrl: bool
    createdAt: bool


class GeneratedGhibliNumberAggregateInput(TypedDict, total=False):
    """GeneratedGhibli input for aggregating numbers"""


GeneratedGhibliAvgAggregateInput = GeneratedGhibliNumberAggregateInput
GeneratedGhibliSumAggregateInput = GeneratedGhibliNumberAggregateInput


GeneratedGhibliCountAggregateInput = TypedDict(
    'GeneratedGhibliCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'prompt': bool,
        'imageUrl': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

GeneratedGhibliCountAggregateOutput = TypedDict(
    'GeneratedGhibliCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'prompt': int,
        'imageUrl': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


GeneratedGhibliKeys = Literal[
    'id',
    'userId',
    'prompt',
    'imageUrl',
    'createdAt',
]
GeneratedGhibliScalarFieldKeys = Literal[
    'id',
    'userId',
    'prompt',
    'imageUrl',
    'createdAt',
]
GeneratedGhibliScalarFieldKeysT = TypeVar('GeneratedGhibliScalarFieldKeysT', bound=GeneratedGhibliScalarFieldKeys)

GeneratedGhibliRelationalFieldKeys = _NoneType

# GeneratedSVG types

class GeneratedSVGOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the GeneratedSVG create method"""
    id: _str
    createdAt: datetime.datetime


class GeneratedSVGCreateInput(GeneratedSVGOptionalCreateInput):
    """Required arguments to the GeneratedSVG create method"""
    userId: _str
    prompt: _str
    svg: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GeneratedSVGOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the GeneratedSVG create method, without relations"""
    id: _str
    createdAt: datetime.datetime


class GeneratedSVGCreateWithoutRelationsInput(GeneratedSVGOptionalCreateWithoutRelationsInput):
    """Required arguments to the GeneratedSVG create method, without relations"""
    userId: _str
    prompt: _str
    svg: _str

class GeneratedSVGConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'GeneratedSVGCreateWithoutRelationsInput'
    where: 'GeneratedSVGWhereUniqueInput'

class GeneratedSVGCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedSVGCreateWithoutRelationsInput'
    connect: 'GeneratedSVGWhereUniqueInput'
    connect_or_create: 'GeneratedSVGConnectOrCreateWithoutRelationsInput'


class GeneratedSVGCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GeneratedSVGCreateWithoutRelationsInput', List['GeneratedSVGCreateWithoutRelationsInput']]
    connect: Union['GeneratedSVGWhereUniqueInput', List['GeneratedSVGWhereUniqueInput']]
    connect_or_create: Union['GeneratedSVGConnectOrCreateWithoutRelationsInput', List['GeneratedSVGConnectOrCreateWithoutRelationsInput']]

_GeneratedSVGWhereUnique_id_Input = TypedDict(
    '_GeneratedSVGWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

GeneratedSVGWhereUniqueInput = _GeneratedSVGWhereUnique_id_Input


class GeneratedSVGUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    userId: _str
    prompt: _str
    svg: _str
    createdAt: datetime.datetime


class GeneratedSVGUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    userId: _str
    prompt: _str
    svg: _str
    createdAt: datetime.datetime


class GeneratedSVGUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GeneratedSVGCreateWithoutRelationsInput']
    connect: List['GeneratedSVGWhereUniqueInput']
    connect_or_create: List['GeneratedSVGConnectOrCreateWithoutRelationsInput']
    set: List['GeneratedSVGWhereUniqueInput']
    disconnect: List['GeneratedSVGWhereUniqueInput']
    delete: List['GeneratedSVGWhereUniqueInput']

    # TODO
    # update: List['GeneratedSVGUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GeneratedSVGUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GeneratedSVGScalarWhereInput']
    # upsert: List['GeneratedSVGUpserteWithWhereUniqueWithoutRelationsInput']


class GeneratedSVGUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedSVGCreateWithoutRelationsInput'
    connect: 'GeneratedSVGWhereUniqueInput'
    connect_or_create: 'GeneratedSVGConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GeneratedSVGUpdateInput'
    # upsert: 'GeneratedSVGUpsertWithoutRelationsInput'


class GeneratedSVGUpsertInput(TypedDict):
    create: 'GeneratedSVGCreateInput'
    update: 'GeneratedSVGUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_GeneratedSVG_id_OrderByInput = TypedDict(
    '_GeneratedSVG_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_GeneratedSVG_userId_OrderByInput = TypedDict(
    '_GeneratedSVG_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_GeneratedSVG_prompt_OrderByInput = TypedDict(
    '_GeneratedSVG_prompt_OrderByInput',
    {
        'prompt': 'SortOrder',
    },
    total=True
)

_GeneratedSVG_svg_OrderByInput = TypedDict(
    '_GeneratedSVG_svg_OrderByInput',
    {
        'svg': 'SortOrder',
    },
    total=True
)

_GeneratedSVG_createdAt_OrderByInput = TypedDict(
    '_GeneratedSVG_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_GeneratedSVG_RelevanceInner = TypedDict(
    '_GeneratedSVG_RelevanceInner',
    {
        'fields': 'List[GeneratedSVGScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_GeneratedSVG_RelevanceOrderByInput = TypedDict(
    '_GeneratedSVG_RelevanceOrderByInput',
    {
        '_relevance': '_GeneratedSVG_RelevanceInner',
    },
    total=True
)

GeneratedSVGOrderByInput = Union[
    '_GeneratedSVG_id_OrderByInput',
    '_GeneratedSVG_userId_OrderByInput',
    '_GeneratedSVG_prompt_OrderByInput',
    '_GeneratedSVG_svg_OrderByInput',
    '_GeneratedSVG_createdAt_OrderByInput',
    '_GeneratedSVG_RelevanceOrderByInput',
]



# recursive GeneratedSVG types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GeneratedSVGRelationFilter = TypedDict(
    'GeneratedSVGRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GeneratedSVGListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GeneratedSVGInclude(TypedDict, total=False):
    """GeneratedSVG relational arguments"""


    

class GeneratedImageIncludeFromGeneratedSVG(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedImageIncludeFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedImageIncludeFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedImageIncludeFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedImageIncludeFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""

    

class GeneratedImageArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class GeneratedImageArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class GeneratedImageArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class GeneratedImageArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class GeneratedImageArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    
    

class FindManyGeneratedImageArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive1'


class FindManyGeneratedImageArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive2'


class FindManyGeneratedImageArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive3'


class FindManyGeneratedImageArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    include: 'GeneratedImageIncludeFromGeneratedImageRecursive4'


class FindManyGeneratedImageArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedImageOrderByInput', List['GeneratedImageOrderByInput']]
    where: 'GeneratedImageWhereInput'
    cursor: 'GeneratedImageWhereUniqueInput'
    distinct: List['GeneratedImageScalarFieldKeys']
    
    

class GeneratedVideoIncludeFromGeneratedSVG(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedVideoIncludeFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedVideoIncludeFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedVideoIncludeFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedVideoIncludeFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""

    

class GeneratedVideoArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class GeneratedVideoArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class GeneratedVideoArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class GeneratedVideoArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class GeneratedVideoArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    
    

class FindManyGeneratedVideoArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive1'


class FindManyGeneratedVideoArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive2'


class FindManyGeneratedVideoArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive3'


class FindManyGeneratedVideoArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    include: 'GeneratedVideoIncludeFromGeneratedVideoRecursive4'


class FindManyGeneratedVideoArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedVideoOrderByInput', List['GeneratedVideoOrderByInput']]
    where: 'GeneratedVideoWhereInput'
    cursor: 'GeneratedVideoWhereUniqueInput'
    distinct: List['GeneratedVideoScalarFieldKeys']
    
    

class GeneratedSummaryIncludeFromGeneratedSVG(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSummaryIncludeFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSummaryIncludeFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSummaryIncludeFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSummaryIncludeFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""

    

class GeneratedSummaryArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class GeneratedSummaryArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class GeneratedSummaryArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class GeneratedSummaryArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class GeneratedSummaryArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    
    

class FindManyGeneratedSummaryArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive1'


class FindManyGeneratedSummaryArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive2'


class FindManyGeneratedSummaryArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive3'


class FindManyGeneratedSummaryArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    include: 'GeneratedSummaryIncludeFromGeneratedSummaryRecursive4'


class FindManyGeneratedSummaryArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSummaryOrderByInput', List['GeneratedSummaryOrderByInput']]
    where: 'GeneratedSummaryWhereInput'
    cursor: 'GeneratedSummaryWhereUniqueInput'
    distinct: List['GeneratedSummaryScalarFieldKeys']
    
    

class GeneratedGhibliIncludeFromGeneratedSVG(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedGhibliIncludeFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedGhibliIncludeFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedGhibliIncludeFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedGhibliIncludeFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""

    

class GeneratedGhibliArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class GeneratedGhibliArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class GeneratedGhibliArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class GeneratedGhibliArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class GeneratedGhibliArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    
    

class FindManyGeneratedGhibliArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive1'


class FindManyGeneratedGhibliArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive2'


class FindManyGeneratedGhibliArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive3'


class FindManyGeneratedGhibliArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    include: 'GeneratedGhibliIncludeFromGeneratedGhibliRecursive4'


class FindManyGeneratedGhibliArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedGhibliOrderByInput', List['GeneratedGhibliOrderByInput']]
    where: 'GeneratedGhibliWhereInput'
    cursor: 'GeneratedGhibliWhereUniqueInput'
    distinct: List['GeneratedGhibliScalarFieldKeys']
    
    

class GeneratedSVGIncludeFromGeneratedSVG(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSVGIncludeFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSVGIncludeFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSVGIncludeFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""


class GeneratedSVGIncludeFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedSVG"""

    

class GeneratedSVGArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class GeneratedSVGArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class GeneratedSVGArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class GeneratedSVGArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class GeneratedSVGArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    
    

class FindManyGeneratedSVGArgsFromGeneratedSVG(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive1'


class FindManyGeneratedSVGArgsFromGeneratedSVGRecursive1(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive2'


class FindManyGeneratedSVGArgsFromGeneratedSVGRecursive2(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive3'


class FindManyGeneratedSVGArgsFromGeneratedSVGRecursive3(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    include: 'GeneratedSVGIncludeFromGeneratedSVGRecursive4'


class FindManyGeneratedSVGArgsFromGeneratedSVGRecursive4(TypedDict, total=False):
    """Arguments for GeneratedSVG"""
    take: int
    skip: int
    order_by: Union['GeneratedSVGOrderByInput', List['GeneratedSVGOrderByInput']]
    where: 'GeneratedSVGWhereInput'
    cursor: 'GeneratedSVGWhereUniqueInput'
    distinct: List['GeneratedSVGScalarFieldKeys']
    


FindManyGeneratedSVGArgs = FindManyGeneratedSVGArgsFromGeneratedSVG
FindFirstGeneratedSVGArgs = FindManyGeneratedSVGArgsFromGeneratedSVG


    

class GeneratedSVGWhereInput(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    svg: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSVGWhereInputRecursive1', List['GeneratedSVGWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSVGWhereInputRecursive1']
    OR: List['GeneratedSVGWhereInputRecursive1']
    NOT: List['GeneratedSVGWhereInputRecursive1']


class GeneratedSVGWhereInputRecursive1(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    svg: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSVGWhereInputRecursive2', List['GeneratedSVGWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSVGWhereInputRecursive2']
    OR: List['GeneratedSVGWhereInputRecursive2']
    NOT: List['GeneratedSVGWhereInputRecursive2']


class GeneratedSVGWhereInputRecursive2(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    svg: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSVGWhereInputRecursive3', List['GeneratedSVGWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSVGWhereInputRecursive3']
    OR: List['GeneratedSVGWhereInputRecursive3']
    NOT: List['GeneratedSVGWhereInputRecursive3']


class GeneratedSVGWhereInputRecursive3(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    svg: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedSVGWhereInputRecursive4', List['GeneratedSVGWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GeneratedSVGWhereInputRecursive4']
    OR: List['GeneratedSVGWhereInputRecursive4']
    NOT: List['GeneratedSVGWhereInputRecursive4']


class GeneratedSVGWhereInputRecursive4(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    prompt: Union[_str, 'types.StringFilter']
    svg: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate GeneratedSVG types


    

class GeneratedSVGScalarWhereWithAggregatesInput(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    svg: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive1']
    OR: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive1']


class GeneratedSVGScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    svg: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive2']
    OR: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive2']


class GeneratedSVGScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    svg: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive3']
    OR: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive3']


class GeneratedSVGScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    svg: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive4']
    OR: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GeneratedSVGScalarWhereWithAggregatesInputRecursive4']


class GeneratedSVGScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """GeneratedSVG arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    prompt: Union[_str, 'types.StringWithAggregatesFilter']
    svg: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class GeneratedSVGGroupByOutput(TypedDict, total=False):
    id: _str
    userId: _str
    prompt: _str
    svg: _str
    createdAt: datetime.datetime
    _sum: 'GeneratedSVGSumAggregateOutput'
    _avg: 'GeneratedSVGAvgAggregateOutput'
    _min: 'GeneratedSVGMinAggregateOutput'
    _max: 'GeneratedSVGMaxAggregateOutput'
    _count: 'GeneratedSVGCountAggregateOutput'


class GeneratedSVGAvgAggregateOutput(TypedDict, total=False):
    """GeneratedSVG output for aggregating averages"""


class GeneratedSVGSumAggregateOutput(TypedDict, total=False):
    """GeneratedSVG output for aggregating sums"""


class GeneratedSVGScalarAggregateOutput(TypedDict, total=False):
    """GeneratedSVG output including scalar fields"""
    id: _str
    userId: _str
    prompt: _str
    svg: _str
    createdAt: datetime.datetime


GeneratedSVGMinAggregateOutput = GeneratedSVGScalarAggregateOutput
GeneratedSVGMaxAggregateOutput = GeneratedSVGScalarAggregateOutput


class GeneratedSVGMaxAggregateInput(TypedDict, total=False):
    """GeneratedSVG input for aggregating by max"""
    id: bool
    userId: bool
    prompt: bool
    svg: bool
    createdAt: bool


class GeneratedSVGMinAggregateInput(TypedDict, total=False):
    """GeneratedSVG input for aggregating by min"""
    id: bool
    userId: bool
    prompt: bool
    svg: bool
    createdAt: bool


class GeneratedSVGNumberAggregateInput(TypedDict, total=False):
    """GeneratedSVG input for aggregating numbers"""


GeneratedSVGAvgAggregateInput = GeneratedSVGNumberAggregateInput
GeneratedSVGSumAggregateInput = GeneratedSVGNumberAggregateInput


GeneratedSVGCountAggregateInput = TypedDict(
    'GeneratedSVGCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'prompt': bool,
        'svg': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

GeneratedSVGCountAggregateOutput = TypedDict(
    'GeneratedSVGCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'prompt': int,
        'svg': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


GeneratedSVGKeys = Literal[
    'id',
    'userId',
    'prompt',
    'svg',
    'createdAt',
]
GeneratedSVGScalarFieldKeys = Literal[
    'id',
    'userId',
    'prompt',
    'svg',
    'createdAt',
]
GeneratedSVGScalarFieldKeysT = TypeVar('GeneratedSVGScalarFieldKeysT', bound=GeneratedSVGScalarFieldKeys)

GeneratedSVGRelationalFieldKeys = _NoneType



# we have to import ourselves as types can be namespaced to types
from . import types, enums, models, fields